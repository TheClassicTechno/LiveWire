"""
LiveWire Kibana Visualization Guide
==================================

Step-by-step instructions for creating powerful visualizations
in Elastic Serverless Kibana for your LiveWire sensor data.
"""

def print_guide():
    print("🎨 LiveWire Kibana Visualization Guide")
    print("=" * 50)
    print()
    
    print("📋 STEP 1: Create Data View")
    print("-" * 30)
    print("1. Open Kibana in your browser:")
    print("   https://my-elasticsearch-project-c80e6e.kb.us-west1.gcp.elastic.cloud")
    print("2. Go to: Stack Management → Data Views")
    print("3. Click: 'Create data view'")
    print("4. Fill in:")
    print("   - Index pattern: metrics-livewire.sensors-*")
    print("   - Name: LiveWire Infrastructure Sensors")
    print("   - Time field: @timestamp")
    print("5. Click: 'Save data view to Kibana'")
    print()
    
    print("📊 STEP 2: Create Your First Dashboard")
    print("-" * 40)
    print("1. Go to: Analytics → Dashboard")
    print("2. Click: 'Create dashboard'")
    print("3. Give it a name: 'LiveWire Infrastructure Monitoring'")
    print("4. Click: 'Create visualization'")
    print()
    
    print("🌡️ VISUALIZATION 1: Temperature Timeline")
    print("-" * 45)
    print("Purpose: Track temperature changes over time")
    print("1. Select: Line")
    print("2. Data view: LiveWire Infrastructure Sensors")
    print("3. Configure:")
    print("   - Horizontal axis: @timestamp")
    print("   - Vertical axis: sensor_data.temperature")
    print("   - Breakdown by: component_id")
    print("4. Title: 'Temperature Trends Over Time'")
    print("5. Save and return to dashboard")
    print()
    
    print("⚠️ VISUALIZATION 2: Risk Assessment Gauge")
    print("-" * 45)
    print("Purpose: Show current risk status")
    print("1. Click: 'Create visualization'")
    print("2. Select: Gauge")
    print("3. Configure:")
    print("   - Metric: Count of records")
    print("   - Breakdown by: risk_zone")
    print("   - Goal: Use colors (green=safe, yellow=warning, red=critical)")
    print("4. Title: 'Current Risk Assessment'")
    print("5. Save and return to dashboard")
    print()
    
    print("📈 VISUALIZATION 3: Multi-Metric Overview")
    print("-" * 45)
    print("Purpose: Show all sensor readings at once")
    print("1. Select: Line")
    print("2. Configure multiple metrics:")
    print("   - Line 1: sensor_data.temperature")
    print("   - Line 2: sensor_data.vibration (scale by 10 for visibility)")
    print("   - Line 3: sensor_data.strain (scale by 0.1 for visibility)")
    print("   - Line 4: sensor_data.power (scale by 0.01 for visibility)")
    print("3. Title: 'All Sensor Metrics'")
    print("4. Save and return to dashboard")
    print()
    
    print("📋 VISUALIZATION 4: Component Status Table")
    print("-" * 45)
    print("Purpose: Show latest status of all components")
    print("1. Select: Data table")
    print("2. Configure columns:")
    print("   - component_id")
    print("   - risk_zone")
    print("   - sensor_data.temperature")
    print("   - sensor_data.vibration")
    print("   - @timestamp")
    print("3. Sort by: @timestamp (descending)")
    print("4. Title: 'Component Status Overview'")
    print("5. Save and return to dashboard")
    print()
    
    print("🔥 VISUALIZATION 5: Alert History")
    print("-" * 35)
    print("Purpose: Track when components go into warning/critical states")
    print("1. Select: Vertical bar chart")
    print("2. Configure:")
    print("   - Horizontal axis: @timestamp (histogram)")
    print("   - Vertical axis: Count")
    print("   - Breakdown by: risk_zone")
    print("   - Filter: risk_zone is 'yellow' OR 'red'")
    print("3. Title: 'Alert History'")
    print("4. Save and return to dashboard")
    print()
    
    print("🎛️ VISUALIZATION 6: Current Readings Metrics")
    print("-" * 45)
    print("Purpose: Large number displays of current values")
    print("1. Select: Metric")
    print("2. Create 4 separate metric visualizations:")
    print("   - Temperature: Latest sensor_data.temperature")
    print("   - Vibration: Latest sensor_data.vibration")
    print("   - Strain: Latest sensor_data.strain")
    print("   - Power: Latest sensor_data.power")
    print("3. Arrange in a row at the top of dashboard")
    print()
    
    print("⚙️ STEP 3: Dashboard Configuration")
    print("-" * 35)
    print("1. Arrange your visualizations in a logical layout")
    print("2. Set time range: Last 1 hour (or 'Last 24 hours' for more data)")
    print("3. Enable auto-refresh: 10 seconds")
    print("4. Save dashboard")
    print()
    
    print("💡 PRO TIPS:")
    print("-" * 15)
    print("• Use filters to focus on specific components")
    print("• Create alerts when temperature > 40°C or risk_zone = 'red'")
    print("• Use drill-downs to investigate specific time periods")
    print("• Export visualizations as PDFs for reports")
    print("• Create multiple dashboards for different audiences")
    print()
    
    print("🚀 NEXT STEPS:")
    print("-" * 15)
    print("1. Create the visualizations above")
    print("2. Generate more test data with different risk zones")
    print("3. Set up alerting rules for critical conditions")
    print("4. Share dashboard with your team")
    print()

if __name__ == "__main__":
    print_guide()